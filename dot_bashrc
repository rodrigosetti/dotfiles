export LANGUAGE=en
export LC_ALL=en_US.UTF-8
export LC_ALL=$LANG
export TZ="/usr/share/zoneinfo/America/Los_Angeles"
export EDITOR=vim

# Configure Colors:
COLOR_WHITE='\033[1;37m'
COLOR_LIGHTGRAY='033[0;37m'
COLOR_GRAY='\033[1;30m'
COLOR_BLACK='\033[0;30m'
COLOR_RED='\033[0;31m'
COLOR_LIGHTRED='\033[1;31m'
COLOR_GREEN='\033[0;32m'
COLOR_LIGHTGREEN='\033[1;32m'
COLOR_BROWN='\033[0;33m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[0;34m'
COLOR_LIGHTBLUE='\033[1;34m'
COLOR_PURPLE='\033[0;35m'
COLOR_PINK='\033[1;35m'
COLOR_CYAN='\033[0;36m'
COLOR_LIGHTCYAN='\033[1;36m'
COLOR_DEFAULT='\033[0m'

# Function to set prompt_command to.
function promptcmd () {
    history -a

    # Titlebar
    case ${TERM} in
        xterm*  )
            local TITLEBAR='\[\033]0;\u@\h: { \w }  \007\]'
            ;;
        *       )
            local TITLEBAR=''
            ;;
    esac
    PS1="${TITLEBAR}"

    # User
    PS1="${PS1}\[${COLOR_LIGHTBLUE}\]\u"

    # @
    PS1="${PS1}\[${COLOR_LIGHTCYAN}\]@"

    # Host
    PS1="${PS1}\[${COLOR_RED}\]\h"

    # :
    PS1="${PS1}\[${COLOR_WHITE}\]:"

    # Working directory
    if [ -w "${PWD}" ]; then
        PS1="${PS1}\[${COLOR_LIGHTGREEN}\]$(prompt_workingdir)"
    else
        PS1="${PS1}\[${COLOR_LIGHTRED}\]$(prompt_workingdir)"
    fi

    # $\#
    PS1="${PS1} \[${COLOR_DEFAULT}\]"
    if [ ${UID} -eq 0 ]; then
        PS1="${PS1}$(parse_git_branch)# "
    else
        PS1="${PS1}$(parse_git_branch)\$ "
    fi
}

# Trim working dir to 1/4 the screen width
function prompt_workingdir () {
  local pwdmaxlen=$(($COLUMNS/4))
  local trunc_symbol="..."
  if [[ $PWD == $HOME* ]]; then
    newPWD="~${PWD#$HOME}"
  else
    newPWD=${PWD}
  fi
  if [ ${#newPWD} -gt $pwdmaxlen ]; then
    local pwdoffset=$(( ${#newPWD} - $pwdmaxlen + 3 ))
    newPWD="${trunc_symbol}${newPWD:$pwdoffset:$pwdmaxlen}"
  fi
  echo $newPWD
}

function load_prompt () {
    export DAY=$(date +%A)
    PROMPT_COMMAND=promptcmd
    export PS1 PROMPT_COMMAND
}
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1]/"
}

# If shell is interactive
if [ -n "$PS1" ]; then
    export CLICOLOR=1
    export LSCOLORS=ExFxCxDxBxegedabagacad
    export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

    # enable programmable completion features (you don't need to enable
    if [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi

    alias tree='tree -CA'
    alias grep='grep --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

    # set a fancy prompt (non-color, unless we know we "want" color)
    case "$TERM" in
        xterm-color) color_prompt=yes;;
    esac

    # uncomment for a colored prompt, if the terminal has the capability; turned
    # off by default to not distract the user: the focus in a terminal window
    # should be on the output of commands, not on the prompt
    force_color_prompt=yes

    if [ -n "$force_color_prompt" ]; then
        if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
            color_prompt=yes
        else
            color_prompt=
        fi
    fi

    if [ "$color_prompt" = yes ]; then
        load_prompt
    else
        PS1='\u@\h:\w \$ '
    fi
    unset color_prompt force_color_prompt

    # Run git completion script, if it exists
    if [ -f ~/git-completion.bash ]; then
        . ~/git-completion.bash
    fi
fi

if [ -f ~/.bashrc_local ]; then
    source ~/.bashrc_local
fi

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
